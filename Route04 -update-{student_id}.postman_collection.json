{
	"info": {
		"_postman_id": "ae0192c7-0844-40a2-9093-4f4b8af80749",
		"name": "Route04 /update/{student_id}",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "35335342"
	},
	"item": [
		{
			"name": "TC18",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Student name is updated\", function () {\r",
							"    const responseBody = pm.response.json();\r",
							"    pm.expect(responseBody).to.have.property(\"name\", \"Niaz Stevensson\");\r",
							"});\r",
							"pm.test(\"Courses passed are updated\", function () {\r",
							"    const responseBody = pm.response.json();\r",
							"    pm.expect(responseBody.courses_passed).to.include(\"CSE1111\");\r",
							"    pm.expect(responseBody.courses_passed).to.include(\"CSE1114\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"Niaz Stevensson\",\r\n  \"personnummer\": \"011030-9999\",  \r\n  \"courses_passed\": [\"CSE1111\", \"CSE1114\"]\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://127.0.0.1:5000/update/3",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "5000",
					"path": [
						"update",
						"3"
					]
				}
			},
			"response": []
		},
		{
			"name": "TC19",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"pm.test(\"Error message for personnummer change\", function () {\r",
							"    const responseBody = pm.response.json();\r",
							"    pm.expect(responseBody).to.have.property(\"error\", \"Changes to personnummer are not allowed.\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"Yue Sakamoto\",\r\n  \"personnummer\": \"980401-9997\",  \r\n  \"courses_passed\": [\"DSE1001\", \"DSE1003\", \"DSE1004\", \"DSE2105\", \"DSE2116\", \"DSE3217\", \"DSE3218\", \"DSE3239\", \"DSE4100\"]\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://127.0.0.1:5000/update/4 ",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "5000",
					"path": [
						"update",
						"4 "
					]
				}
			},
			"response": []
		},
		{
			"name": "TC20",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Error message for malformed personnummer\", function () {\r",
							"    const responseBody = pm.response.json();\r",
							"    pm.expect(responseBody).to.have.property(\"error\", \"Malformed personnummer 980401-100\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"Abul\",\r\n  \"personnummer\": \"980401-100\",  \r\n  \"courses_passed\": [\"DSE1001\",\"DSE4100\"]\r\n}\r\n\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://127.0.0.1:5000/update/15 ",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "5000",
					"path": [
						"update",
						"15 "
					]
				}
			},
			"response": []
		},
		{
			"name": "TC21",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"pm.test(\"Error message for missing name\", function () {\r",
							"    const responseBody = pm.response.json();\r",
							"    pm.expect(responseBody).to.have.property(\"error\", \"No name field\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"personnummer\": \"990111-9999\",  \r\n  \"courses_passed\": [\"CSE2213\", \"CSE1110\"]\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://127.0.0.1:5000/update/2",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "5000",
					"path": [
						"update",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "TC22",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"pm.test(\"Error message for invalid course format\", function () {\r",
							"    const responseBody = pm.response.json();\r",
							"    pm.expect(responseBody).to.have.property(\"error\", \"Malformed course ID: CSEaaaa\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"Amy Pond\",\r\n  \"personnummer\": \"020201-9999\",  \r\n  \"courses_passed\": [\"CSE1111\", \"CSEaaaa\"]\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://127.0.0.1:5000/update/6",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "5000",
					"path": [
						"update",
						"6"
					]
				}
			},
			"response": []
		},
		{
			"name": "TC23",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Student name is updated\", function () {\r",
							"    const responseBody = pm.response.json();\r",
							"    pm.expect(responseBody).to.have.property(\"name\", \"Siam Williams\");\r",
							"});\r",
							"pm.test(\"Courses passed is empty\", function () {\r",
							"    const responseBody = pm.response.json();\r",
							"    pm.expect(responseBody.courses_passed).to.be.an('array').that.is.empty;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"Siam Williams\",\r\n  \"personnummer\": \"010203-9999\",  \r\n  \"courses_passed\": []\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://127.0.0.1:5000/update/7 ",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "5000",
					"path": [
						"update",
						"7 "
					]
				}
			},
			"response": []
		}
	]
}