{
	"info": {
		"_postman_id": "f75a6301-5daa-480c-a099-6c6a859a27e5",
		"name": "Route05 /delete/{student_id}",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "35335342"
	},
	"item": [
		{
			"name": "TC24",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Student record is deleted\", function () {\r",
							"    const responseBody = pm.response.json();\r",
							"    pm.expect(responseBody).to.have.property(\"deleted\", \"8\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:5000/delete/8",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "5000",
					"path": [
						"delete",
						"8"
					]
				}
			},
			"response": []
		},
		{
			"name": "TC25",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"pm.test(\"Error message for non-existent student\", function () {\r",
							"    const responseBody = pm.response.json();\r",
							"    pm.expect(responseBody).to.have.property(\"error\", \"Student ID 12 does not exist\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:5000/delete/12",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "5000",
					"path": [
						"delete",
						"12"
					]
				}
			},
			"response": []
		},
		{
			"name": "TC26",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"pm.test(\"Error message for invalid student ID format\", function () {\r",
							"    const responseBody = pm.response.json();\r",
							"    pm.expect(responseBody).to.have.property(\"error\", \"Student ID lala is not formatted correctly\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:5000/delete/lala  ",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "5000",
					"path": [
						"delete",
						"lala  "
					]
				}
			},
			"response": []
		},
		{
			"name": "TC27",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Other student records are intact\", function () {\r",
							"    const responseBody = pm.response.json();\r",
							"    pm.expect(responseBody).to.have.property(\"deleted\", \"3\");\r",
							"});\r",
							"\r",
							"pm.sendRequest({\r",
							"    url: 'http://127.0.0.1:5000/student/4',\r",
							"    method: 'GET'\r",
							"}, function (err, res) {\r",
							"    pm.test(\"Student with ID 4 is still available in the database\", function () {\r",
							"        pm.expect(res).to.have.property('code', 200); \r",
							"        const responseBody = res.json(); \r",
							"        pm.expect(responseBody).to.have.property(\"id\", 4); \r",
							"        pm.expect(responseBody).to.have.property(\"name\"); \r",
							"        pm.expect(responseBody).to.have.property(\"courses_passed\").that.is.an(\"array\"); \r",
							"    });\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:5000/delete/3",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "5000",
					"path": [
						"delete",
						"3"
					]
				}
			},
			"response": []
		}
	]
}